// Generated from C:\Users\IBM_ADMIN\Documents\GitHub\lam-lite\src\main\java\com\hwwu\lamlite\parser\LamLite.g4 by ANTLR 4.3
package com.hwwu.lamlite.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LamLiteLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		MODIFIER=1, K_THIS=2, K_REQUIRE=3, K_MODULE=4, K_PUBLIC=5, K_AS=6, K_LAM=7, 
		K_FUN=8, K_VAL=9, K_IF=10, K_THEN=11, K_ELSE=12, K_LET=13, K_IN=14, K_END=15, 
		K_WHERE=16, K_CASE=17, K_OF=18, IDENTIFIER=19, VOID_LITERAL=20, NULL_LITERAL=21, 
		BOOLEAN_LITERAL=22, INTEGER_LITERAL=23, STRING_LITERAL=24, LPAREN=25, 
		RPAREN=26, LBRACE=27, RBRACE=28, LBRACK=29, RBRACK=30, SEMI=31, COMMA=32, 
		DOT=33, EQ=34, GT=35, LT=36, BANG=37, TILDE=38, QUESTION=39, COLON=40, 
		EQEQ=41, LE=42, GE=43, NOTEQUAL=44, AND=45, OR=46, INC=47, DEC=48, ADD=49, 
		SUB=50, MUL=51, DIV=52, BITAND=53, BITOR=54, CARET=55, MOD=56, ARROW=57, 
		BIGARROW=58, COLONCOLON=59, DOLLAR=60, UNDERSCORE=61, COMMENT_DOC=62, 
		COMMENT_BLOCK=63, COMMENT_LINE=64, REST_COMMENT=65, WS=66, LETTER=67;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='", "'>'", "'?'", "'@'", "'A'", "'B'", "'C'"
	};
	public static final String[] ruleNames = {
		"MODIFIER", "K_THIS", "K_REQUIRE", "K_MODULE", "K_PUBLIC", "K_AS", "K_LAM", 
		"K_FUN", "K_VAL", "K_IF", "K_THEN", "K_ELSE", "K_LET", "K_IN", "K_END", 
		"K_WHERE", "K_CASE", "K_OF", "IDENTIFIER", "VOID_LITERAL", "NULL_LITERAL", 
		"BOOLEAN_LITERAL", "DIGIT", "XDIGIT", "ODIGIT", "BDIGIT", "INT_TYPE_SUFFIX", 
		"BINARY_NUMERAL", "OCTAL_NUMERAK", "HEX_NUMERAL", "DECIMAL_NUMERAL", "INTEGER_LITERAL", 
		"STRING_LITERAL", "STRING_CHAR", "ESCAPE_CHAR", "OCTAL_ESCAPE", "UNICODE_ESCAPE", 
		"LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "SEMI", "COMMA", 
		"DOT", "EQ", "GT", "LT", "BANG", "TILDE", "QUESTION", "COLON", "EQEQ", 
		"LE", "GE", "NOTEQUAL", "AND", "OR", "INC", "DEC", "ADD", "SUB", "MUL", 
		"DIV", "BITAND", "BITOR", "CARET", "MOD", "ARROW", "BIGARROW", "COLONCOLON", 
		"DOLLAR", "UNDERSCORE", "COMMENT_DOC", "COMMENT_BLOCK", "COMMENT_LINE", 
		"REST_COMMENT", "WS", "LETTER"
	};


	public LamLiteLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LamLite.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 79: return LETTER_sempred((RuleContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean LETTER_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return Character.isJavaIdentifierStart(_input.LA(-1));

		case 1: return Character.isJavaIdentifierStart(Character.toCodePoint((char)_input.LA(-2), (char)_input.LA(-1)));
		}
		return true;
	}

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2E\u021c\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\3\2\3\2\3\3\3\3\3"+
		"\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5"+
		"\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3"+
		"\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r"+
		"\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24"+
		"\3\24\7\24\u00f9\n\24\f\24\16\24\u00fc\13\24\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\5\27\u010f"+
		"\n\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\35"+
		"\6\35\u011e\n\35\r\35\16\35\u011f\3\36\3\36\6\36\u0124\n\36\r\36\16\36"+
		"\u0125\3\37\3\37\3\37\6\37\u012b\n\37\r\37\16\37\u012c\3 \3 \7 \u0131"+
		"\n \f \16 \u0134\13 \3!\3!\5!\u0138\n!\3!\3!\5!\u013c\n!\3!\3!\5!\u0140"+
		"\n!\3!\3!\5!\u0144\n!\5!\u0146\n!\3\"\3\"\7\"\u014a\n\"\f\"\16\"\u014d"+
		"\13\"\3\"\3\"\3#\3#\5#\u0153\n#\3$\3$\3$\3$\5$\u0159\n$\3%\3%\3%\3%\3"+
		"%\3%\3%\3%\3%\3%\3%\5%\u0166\n%\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\3("+
		"\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3"+
		"\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\3\67\38\38\38\3"+
		"9\39\39\3:\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3>\3>\3>\3?\3?\3@\3@\3A\3"+
		"A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3G\3H\3H\3H\3I\3I\3I\3J\3J\3K\3"+
		"K\3L\3L\3L\3L\3L\7L\u01ca\nL\fL\16L\u01cd\13L\3L\3L\3L\3L\3M\3M\3M\3M"+
		"\7M\u01d7\nM\fM\16M\u01da\13M\3M\3M\3M\3M\3M\3M\7M\u01e2\nM\fM\16M\u01e5"+
		"\13M\3M\3M\5M\u01e9\nM\3M\3M\3N\3N\3N\3N\7N\u01f1\nN\fN\16N\u01f4\13N"+
		"\3N\3N\7N\u01f8\nN\fN\16N\u01fb\13N\5N\u01fd\nN\3N\3N\3O\3O\3O\3O\3O\3"+
		"O\7O\u0207\nO\fO\16O\u020a\13O\3O\3O\3P\6P\u020f\nP\rP\16P\u0210\3P\3"+
		"P\3Q\3Q\3Q\3Q\3Q\3Q\5Q\u021b\nQ\6\u01cb\u01d8\u01e3\u0208\2R\3\3\5\4\7"+
		"\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\2\61\2\63\2\65\2\67\29\2;\2=\2?\2A\31C\32E"+
		"\2G\2I\2K\2M\33O\34Q\35S\36U\37W Y![\"]#_$a%c&e\'g(i)k*m+o,q-s.u/w\60"+
		"y\61{\62}\63\177\64\u0081\65\u0083\66\u0085\67\u00878\u00899\u008b:\u008d"+
		";\u008f<\u0091=\u0093>\u0095?\u0097@\u0099A\u009bB\u009dC\u009fD\u00a1"+
		"E\3\2\23\3\2\62;\5\2\62;CHch\3\2\629\3\2\62\63\4\2NNnn\4\2DDdd\4\2ZZz"+
		"z\3\2\63;\4\2$$^^\t\2$$^^ddhhppttvv\3\2\62\65\4\2\f\f\17\17\5\2\13\f\16"+
		"\17\"\"\5\2C\\aac|\4\2\2\u0101\ud802\udc01\3\2\ud802\udc01\3\2\udc02\ue001"+
		"\u022d\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2"+
		"\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3"+
		"\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2"+
		"\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2"+
		"A\3\2\2\2\2C\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3"+
		"\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2"+
		"\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2"+
		"o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3"+
		"\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2"+
		"\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097"+
		"\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2"+
		"\2\2\u00a1\3\2\2\2\3\u00a3\3\2\2\2\5\u00a5\3\2\2\2\7\u00aa\3\2\2\2\t\u00b2"+
		"\3\2\2\2\13\u00b9\3\2\2\2\r\u00c0\3\2\2\2\17\u00c3\3\2\2\2\21\u00c7\3"+
		"\2\2\2\23\u00cb\3\2\2\2\25\u00cf\3\2\2\2\27\u00d2\3\2\2\2\31\u00d7\3\2"+
		"\2\2\33\u00dc\3\2\2\2\35\u00e0\3\2\2\2\37\u00e3\3\2\2\2!\u00e7\3\2\2\2"+
		"#\u00ed\3\2\2\2%\u00f2\3\2\2\2\'\u00f5\3\2\2\2)\u00fd\3\2\2\2+\u0100\3"+
		"\2\2\2-\u010e\3\2\2\2/\u0110\3\2\2\2\61\u0112\3\2\2\2\63\u0114\3\2\2\2"+
		"\65\u0116\3\2\2\2\67\u0118\3\2\2\29\u011a\3\2\2\2;\u0121\3\2\2\2=\u0127"+
		"\3\2\2\2?\u012e\3\2\2\2A\u0145\3\2\2\2C\u0147\3\2\2\2E\u0152\3\2\2\2G"+
		"\u0158\3\2\2\2I\u0165\3\2\2\2K\u0167\3\2\2\2M\u016f\3\2\2\2O\u0171\3\2"+
		"\2\2Q\u0173\3\2\2\2S\u0175\3\2\2\2U\u0177\3\2\2\2W\u0179\3\2\2\2Y\u017b"+
		"\3\2\2\2[\u017d\3\2\2\2]\u017f\3\2\2\2_\u0181\3\2\2\2a\u0183\3\2\2\2c"+
		"\u0185\3\2\2\2e\u0187\3\2\2\2g\u0189\3\2\2\2i\u018b\3\2\2\2k\u018d\3\2"+
		"\2\2m\u018f\3\2\2\2o\u0192\3\2\2\2q\u0195\3\2\2\2s\u0198\3\2\2\2u\u019b"+
		"\3\2\2\2w\u019e\3\2\2\2y\u01a1\3\2\2\2{\u01a4\3\2\2\2}\u01a7\3\2\2\2\177"+
		"\u01a9\3\2\2\2\u0081\u01ab\3\2\2\2\u0083\u01ad\3\2\2\2\u0085\u01af\3\2"+
		"\2\2\u0087\u01b1\3\2\2\2\u0089\u01b3\3\2\2\2\u008b\u01b5\3\2\2\2\u008d"+
		"\u01b7\3\2\2\2\u008f\u01ba\3\2\2\2\u0091\u01bd\3\2\2\2\u0093\u01c0\3\2"+
		"\2\2\u0095\u01c2\3\2\2\2\u0097\u01c4\3\2\2\2\u0099\u01e8\3\2\2\2\u009b"+
		"\u01fc\3\2\2\2\u009d\u0200\3\2\2\2\u009f\u020e\3\2\2\2\u00a1\u021a\3\2"+
		"\2\2\u00a3\u00a4\5\13\6\2\u00a4\4\3\2\2\2\u00a5\u00a6\7v\2\2\u00a6\u00a7"+
		"\7j\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9\7u\2\2\u00a9\6\3\2\2\2\u00aa\u00ab"+
		"\7t\2\2\u00ab\u00ac\7g\2\2\u00ac\u00ad\7s\2\2\u00ad\u00ae\7w\2\2\u00ae"+
		"\u00af\7k\2\2\u00af\u00b0\7t\2\2\u00b0\u00b1\7g\2\2\u00b1\b\3\2\2\2\u00b2"+
		"\u00b3\7o\2\2\u00b3\u00b4\7q\2\2\u00b4\u00b5\7f\2\2\u00b5\u00b6\7w\2\2"+
		"\u00b6\u00b7\7n\2\2\u00b7\u00b8\7g\2\2\u00b8\n\3\2\2\2\u00b9\u00ba\7r"+
		"\2\2\u00ba\u00bb\7w\2\2\u00bb\u00bc\7d\2\2\u00bc\u00bd\7n\2\2\u00bd\u00be"+
		"\7k\2\2\u00be\u00bf\7e\2\2\u00bf\f\3\2\2\2\u00c0\u00c1\7c\2\2\u00c1\u00c2"+
		"\7u\2\2\u00c2\16\3\2\2\2\u00c3\u00c4\7n\2\2\u00c4\u00c5\7c\2\2\u00c5\u00c6"+
		"\7o\2\2\u00c6\20\3\2\2\2\u00c7\u00c8\7h\2\2\u00c8\u00c9\7w\2\2\u00c9\u00ca"+
		"\7p\2\2\u00ca\22\3\2\2\2\u00cb\u00cc\7x\2\2\u00cc\u00cd\7c\2\2\u00cd\u00ce"+
		"\7n\2\2\u00ce\24\3\2\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1\7h\2\2\u00d1\26"+
		"\3\2\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4\7j\2\2\u00d4\u00d5\7g\2\2\u00d5"+
		"\u00d6\7p\2\2\u00d6\30\3\2\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9\7n\2\2\u00d9"+
		"\u00da\7u\2\2\u00da\u00db\7g\2\2\u00db\32\3\2\2\2\u00dc\u00dd\7n\2\2\u00dd"+
		"\u00de\7g\2\2\u00de\u00df\7v\2\2\u00df\34\3\2\2\2\u00e0\u00e1\7k\2\2\u00e1"+
		"\u00e2\7p\2\2\u00e2\36\3\2\2\2\u00e3\u00e4\7g\2\2\u00e4\u00e5\7p\2\2\u00e5"+
		"\u00e6\7f\2\2\u00e6 \3\2\2\2\u00e7\u00e8\7y\2\2\u00e8\u00e9\7j\2\2\u00e9"+
		"\u00ea\7g\2\2\u00ea\u00eb\7t\2\2\u00eb\u00ec\7g\2\2\u00ec\"\3\2\2\2\u00ed"+
		"\u00ee\7e\2\2\u00ee\u00ef\7c\2\2\u00ef\u00f0\7u\2\2\u00f0\u00f1\7g\2\2"+
		"\u00f1$\3\2\2\2\u00f2\u00f3\7q\2\2\u00f3\u00f4\7h\2\2\u00f4&\3\2\2\2\u00f5"+
		"\u00fa\5\u00a1Q\2\u00f6\u00f9\5\u00a1Q\2\u00f7\u00f9\5/\30\2\u00f8\u00f6"+
		"\3\2\2\2\u00f8\u00f7\3\2\2\2\u00f9\u00fc\3\2\2\2\u00fa\u00f8\3\2\2\2\u00fa"+
		"\u00fb\3\2\2\2\u00fb(\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fd\u00fe\5M\'\2\u00fe"+
		"\u00ff\5O(\2\u00ff*\3\2\2\2\u0100\u0101\7p\2\2\u0101\u0102\7w\2\2\u0102"+
		"\u0103\7n\2\2\u0103\u0104\7n\2\2\u0104,\3\2\2\2\u0105\u0106\7v\2\2\u0106"+
		"\u0107\7t\2\2\u0107\u0108\7w\2\2\u0108\u010f\7g\2\2\u0109\u010a\7h\2\2"+
		"\u010a\u010b\7c\2\2\u010b\u010c\7n\2\2\u010c\u010d\7u\2\2\u010d\u010f"+
		"\7g\2\2\u010e\u0105\3\2\2\2\u010e\u0109\3\2\2\2\u010f.\3\2\2\2\u0110\u0111"+
		"\t\2\2\2\u0111\60\3\2\2\2\u0112\u0113\t\3\2\2\u0113\62\3\2\2\2\u0114\u0115"+
		"\t\4\2\2\u0115\64\3\2\2\2\u0116\u0117\t\5\2\2\u0117\66\3\2\2\2\u0118\u0119"+
		"\t\6\2\2\u01198\3\2\2\2\u011a\u011b\7\62\2\2\u011b\u011d\t\7\2\2\u011c"+
		"\u011e\5\65\33\2\u011d\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u011d\3"+
		"\2\2\2\u011f\u0120\3\2\2\2\u0120:\3\2\2\2\u0121\u0123\7\62\2\2\u0122\u0124"+
		"\5\63\32\2\u0123\u0122\3\2\2\2\u0124\u0125\3\2\2\2\u0125\u0123\3\2\2\2"+
		"\u0125\u0126\3\2\2\2\u0126<\3\2\2\2\u0127\u0128\7\62\2\2\u0128\u012a\t"+
		"\b\2\2\u0129\u012b\5\61\31\2\u012a\u0129\3\2\2\2\u012b\u012c\3\2\2\2\u012c"+
		"\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d>\3\2\2\2\u012e\u0132\t\t\2\2"+
		"\u012f\u0131\5/\30\2\u0130\u012f\3\2\2\2\u0131\u0134\3\2\2\2\u0132\u0130"+
		"\3\2\2\2\u0132\u0133\3\2\2\2\u0133@\3\2\2\2\u0134\u0132\3\2\2\2\u0135"+
		"\u0137\59\35\2\u0136\u0138\5\67\34\2\u0137\u0136\3\2\2\2\u0137\u0138\3"+
		"\2\2\2\u0138\u0146\3\2\2\2\u0139\u013b\5;\36\2\u013a\u013c\5\67\34\2\u013b"+
		"\u013a\3\2\2\2\u013b\u013c\3\2\2\2\u013c\u0146\3\2\2\2\u013d\u013f\5;"+
		"\36\2\u013e\u0140\5\67\34\2\u013f\u013e\3\2\2\2\u013f\u0140\3\2\2\2\u0140"+
		"\u0146\3\2\2\2\u0141\u0143\5? \2\u0142\u0144\5\67\34\2\u0143\u0142\3\2"+
		"\2\2\u0143\u0144\3\2\2\2\u0144\u0146\3\2\2\2\u0145\u0135\3\2\2\2\u0145"+
		"\u0139\3\2\2\2\u0145\u013d\3\2\2\2\u0145\u0141\3\2\2\2\u0146B\3\2\2\2"+
		"\u0147\u014b\7$\2\2\u0148\u014a\5E#\2\u0149\u0148\3\2\2\2\u014a\u014d"+
		"\3\2\2\2\u014b\u0149\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014e\3\2\2\2\u014d"+
		"\u014b\3\2\2\2\u014e\u014f\7$\2\2\u014fD\3\2\2\2\u0150\u0153\n\n\2\2\u0151"+
		"\u0153\5G$\2\u0152\u0150\3\2\2\2\u0152\u0151\3\2\2\2\u0153F\3\2\2\2\u0154"+
		"\u0155\7^\2\2\u0155\u0159\t\13\2\2\u0156\u0159\5I%\2\u0157\u0159\5K&\2"+
		"\u0158\u0154\3\2\2\2\u0158\u0156\3\2\2\2\u0158\u0157\3\2\2\2\u0159H\3"+
		"\2\2\2\u015a\u015b\7^\2\2\u015b\u0166\5\63\32\2\u015c\u015d\7^\2\2\u015d"+
		"\u015e\5\63\32\2\u015e\u015f\5\63\32\2\u015f\u0166\3\2\2\2\u0160\u0161"+
		"\7^\2\2\u0161\u0162\t\f\2\2\u0162\u0163\5\63\32\2\u0163\u0164\5\63\32"+
		"\2\u0164\u0166\3\2\2\2\u0165\u015a\3\2\2\2\u0165\u015c\3\2\2\2\u0165\u0160"+
		"\3\2\2\2\u0166J\3\2\2\2\u0167\u0168\7^\2\2\u0168\u0169\7w\2\2\u0169\u016a"+
		"\3\2\2\2\u016a\u016b\5\61\31\2\u016b\u016c\5\61\31\2\u016c\u016d\5\61"+
		"\31\2\u016d\u016e\5\61\31\2\u016eL\3\2\2\2\u016f\u0170\7*\2\2\u0170N\3"+
		"\2\2\2\u0171\u0172\7+\2\2\u0172P\3\2\2\2\u0173\u0174\7}\2\2\u0174R\3\2"+
		"\2\2\u0175\u0176\7\177\2\2\u0176T\3\2\2\2\u0177\u0178\7]\2\2\u0178V\3"+
		"\2\2\2\u0179\u017a\7_\2\2\u017aX\3\2\2\2\u017b\u017c\7=\2\2\u017cZ\3\2"+
		"\2\2\u017d\u017e\7.\2\2\u017e\\\3\2\2\2\u017f\u0180\7\60\2\2\u0180^\3"+
		"\2\2\2\u0181\u0182\7?\2\2\u0182`\3\2\2\2\u0183\u0184\7@\2\2\u0184b\3\2"+
		"\2\2\u0185\u0186\7>\2\2\u0186d\3\2\2\2\u0187\u0188\7#\2\2\u0188f\3\2\2"+
		"\2\u0189\u018a\7\u0080\2\2\u018ah\3\2\2\2\u018b\u018c\7A\2\2\u018cj\3"+
		"\2\2\2\u018d\u018e\7<\2\2\u018el\3\2\2\2\u018f\u0190\7?\2\2\u0190\u0191"+
		"\7?\2\2\u0191n\3\2\2\2\u0192\u0193\7>\2\2\u0193\u0194\7?\2\2\u0194p\3"+
		"\2\2\2\u0195\u0196\7@\2\2\u0196\u0197\7?\2\2\u0197r\3\2\2\2\u0198\u0199"+
		"\7#\2\2\u0199\u019a\7?\2\2\u019at\3\2\2\2\u019b\u019c\7(\2\2\u019c\u019d"+
		"\7(\2\2\u019dv\3\2\2\2\u019e\u019f\7~\2\2\u019f\u01a0\7~\2\2\u01a0x\3"+
		"\2\2\2\u01a1\u01a2\7-\2\2\u01a2\u01a3\7-\2\2\u01a3z\3\2\2\2\u01a4\u01a5"+
		"\7/\2\2\u01a5\u01a6\7/\2\2\u01a6|\3\2\2\2\u01a7\u01a8\7-\2\2\u01a8~\3"+
		"\2\2\2\u01a9\u01aa\7/\2\2\u01aa\u0080\3\2\2\2\u01ab\u01ac\7,\2\2\u01ac"+
		"\u0082\3\2\2\2\u01ad\u01ae\7\61\2\2\u01ae\u0084\3\2\2\2\u01af\u01b0\7"+
		"(\2\2\u01b0\u0086\3\2\2\2\u01b1\u01b2\7~\2\2\u01b2\u0088\3\2\2\2\u01b3"+
		"\u01b4\7`\2\2\u01b4\u008a\3\2\2\2\u01b5\u01b6\7\'\2\2\u01b6\u008c\3\2"+
		"\2\2\u01b7\u01b8\7/\2\2\u01b8\u01b9\7@\2\2\u01b9\u008e\3\2\2\2\u01ba\u01bb"+
		"\7?\2\2\u01bb\u01bc\7@\2\2\u01bc\u0090\3\2\2\2\u01bd\u01be\7<\2\2\u01be"+
		"\u01bf\7<\2\2\u01bf\u0092\3\2\2\2\u01c0\u01c1\7&\2\2\u01c1\u0094\3\2\2"+
		"\2\u01c2\u01c3\7a\2\2\u01c3\u0096\3\2\2\2\u01c4\u01c5\7\61\2\2\u01c5\u01c6"+
		"\7,\2\2\u01c6\u01c7\7,\2\2\u01c7\u01cb\3\2\2\2\u01c8\u01ca\13\2\2\2\u01c9"+
		"\u01c8\3\2\2\2\u01ca\u01cd\3\2\2\2\u01cb\u01cc\3\2\2\2\u01cb\u01c9\3\2"+
		"\2\2\u01cc\u01ce\3\2\2\2\u01cd\u01cb\3\2\2\2\u01ce\u01cf\7,\2\2\u01cf"+
		"\u01d0\7,\2\2\u01d0\u01d1\7\61\2\2\u01d1\u0098\3\2\2\2\u01d2\u01d3\7\61"+
		"\2\2\u01d3\u01d4\7,\2\2\u01d4\u01d8\3\2\2\2\u01d5\u01d7\13\2\2\2\u01d6"+
		"\u01d5\3\2\2\2\u01d7\u01da\3\2\2\2\u01d8\u01d9\3\2\2\2\u01d8\u01d6\3\2"+
		"\2\2\u01d9\u01db\3\2\2\2\u01da\u01d8\3\2\2\2\u01db\u01dc\7,\2\2\u01dc"+
		"\u01e9\7\61\2\2\u01dd\u01de\7*\2\2\u01de\u01df\7,\2\2\u01df\u01e3\3\2"+
		"\2\2\u01e0\u01e2\13\2\2\2\u01e1\u01e0\3\2\2\2\u01e2\u01e5\3\2\2\2\u01e3"+
		"\u01e4\3\2\2\2\u01e3\u01e1\3\2\2\2\u01e4\u01e6\3\2\2\2\u01e5\u01e3\3\2"+
		"\2\2\u01e6\u01e7\7,\2\2\u01e7\u01e9\7+\2\2\u01e8\u01d2\3\2\2\2\u01e8\u01dd"+
		"\3\2\2\2\u01e9\u01ea\3\2\2\2\u01ea\u01eb\bM\2\2\u01eb\u009a\3\2\2\2\u01ec"+
		"\u01ed\7\61\2\2\u01ed\u01ee\7\61\2\2\u01ee\u01f2\3\2\2\2\u01ef\u01f1\n"+
		"\r\2\2\u01f0\u01ef\3\2\2\2\u01f1\u01f4\3\2\2\2\u01f2\u01f0\3\2\2\2\u01f2"+
		"\u01f3\3\2\2\2\u01f3\u01fd\3\2\2\2\u01f4\u01f2\3\2\2\2\u01f5\u01f9\7%"+
		"\2\2\u01f6\u01f8\n\r\2\2\u01f7\u01f6\3\2\2\2\u01f8\u01fb\3\2\2\2\u01f9"+
		"\u01f7\3\2\2\2\u01f9\u01fa\3\2\2\2\u01fa\u01fd\3\2\2\2\u01fb\u01f9\3\2"+
		"\2\2\u01fc\u01ec\3\2\2\2\u01fc\u01f5\3\2\2\2\u01fd\u01fe\3\2\2\2\u01fe"+
		"\u01ff\bN\2\2\u01ff\u009c\3\2\2\2\u0200\u0201\7\61\2\2\u0201\u0202\7\61"+
		"\2\2\u0202\u0203\7\61\2\2\u0203\u0204\7\61\2\2\u0204\u0208\3\2\2\2\u0205"+
		"\u0207\13\2\2\2\u0206\u0205\3\2\2\2\u0207\u020a\3\2\2\2\u0208\u0209\3"+
		"\2\2\2\u0208\u0206\3\2\2\2\u0209\u020b\3\2\2\2\u020a\u0208\3\2\2\2\u020b"+
		"\u020c\bO\2\2\u020c\u009e\3\2\2\2\u020d\u020f\t\16\2\2\u020e\u020d\3\2"+
		"\2\2\u020f\u0210\3\2\2\2\u0210\u020e\3\2\2\2\u0210\u0211\3\2\2\2\u0211"+
		"\u0212\3\2\2\2\u0212\u0213\bP\2\2\u0213\u00a0\3\2\2\2\u0214\u021b\t\17"+
		"\2\2\u0215\u0216\n\20\2\2\u0216\u021b\6Q\2\2\u0217\u0218\t\21\2\2\u0218"+
		"\u0219\t\22\2\2\u0219\u021b\6Q\3\2\u021a\u0214\3\2\2\2\u021a\u0215\3\2"+
		"\2\2\u021a\u0217\3\2\2\2\u021b\u00a2\3\2\2\2\35\2\u00f8\u00fa\u010e\u011f"+
		"\u0125\u012c\u0132\u0137\u013b\u013f\u0143\u0145\u014b\u0152\u0158\u0165"+
		"\u01cb\u01d8\u01e3\u01e8\u01f2\u01f9\u01fc\u0208\u0210\u021a\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}