// Generated from /vagrant/src/main/java/com/hwwu/lamlite/parser/LamLite.g4 by ANTLR 4.4.1-dev
package com.hwwu.lamlite.parser;
 
import java.util.Arrays; 

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LamLiteLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4.1-dev", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__2=1, T__1=2, T__0=3, K_INT=4, K_STRING=5, K_BOOL=6, K_THIS=7, K_REQUIRE=8, 
		K_MODULE=9, K_PUBLIC=10, K_AS=11, K_LAM=12, K_FUN=13, K_VAL=14, K_IF=15, 
		K_THEN=16, K_ELSE=17, K_LET=18, K_IN=19, K_END=20, K_WHERE=21, K_CASE=22, 
		K_OF=23, VOID_LITERAL=24, NULL_LITERAL=25, BOOLEAN_LITERAL=26, INTEGER_LITERAL=27, 
		STRING_LITERAL=28, LPAREN=29, RPAREN=30, LBRACE=31, RBRACE=32, LBRACK=33, 
		RBRACK=34, SEMI=35, COMMA=36, DOT=37, IDNAME=38, IDOPERATOR=39, COMMENT_DOC=40, 
		COMMENT_BLOCK=41, COMMENT_LINE=42, REST_COMMENT=43, WS=44;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','"
	};
	public static final String[] ruleNames = {
		"T__2", "T__1", "T__0", "K_INT", "K_STRING", "K_BOOL", "K_THIS", "K_REQUIRE", 
		"K_MODULE", "K_PUBLIC", "K_AS", "K_LAM", "K_FUN", "K_VAL", "K_IF", "K_THEN", 
		"K_ELSE", "K_LET", "K_IN", "K_END", "K_WHERE", "K_CASE", "K_OF", "VOID_LITERAL", 
		"NULL_LITERAL", "BOOLEAN_LITERAL", "DIGIT", "XDIGIT", "ODIGIT", "BDIGIT", 
		"INT_TYPE_SUFFIX", "BINARY_NUMERAL", "OCTAL_NUMERAK", "HEX_NUMERAL", "DECIMAL_NUMERAL", 
		"INTEGER_LITERAL", "STRING_LITERAL", "STRING_CHAR", "ESCAPE_CHAR", "OCTAL_ESCAPE", 
		"UNICODE_ESCAPE", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
		"SEMI", "COMMA", "DOT", "IDNAME", "IDOPERATOR", "SYMBOL", "COMMENT_DOC", 
		"COMMENT_BLOCK", "COMMENT_LINE", "REST_COMMENT", "WS", "LETTER"
	};


	public LamLiteLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LamLite.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 51: return IDOPERATOR_sempred((RuleContext)_localctx, predIndex);
		case 58: return LETTER_sempred((RuleContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean IDOPERATOR_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return !Arrays.asList("=>").contains(getText());
		}
		return true;
	}
	private boolean LETTER_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return Character.isJavaIdentifierStart(_input.LA(-1));
		case 2: return Character.isJavaIdentifierStart(Character.toCodePoint((char)_input.LA(-2), (char)_input.LA(-1)));
		}
		return true;
	}

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2.\u01cd\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\3\2\3"+
		"\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7"+
		"\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3"+
		"\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f"+
		"\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20"+
		"\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32"+
		"\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\5\33\u00f2\n\33"+
		"\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\6!\u0101\n!\r"+
		"!\16!\u0102\3\"\3\"\6\"\u0107\n\"\r\"\16\"\u0108\3#\3#\3#\6#\u010e\n#"+
		"\r#\16#\u010f\3$\3$\7$\u0114\n$\f$\16$\u0117\13$\3%\3%\5%\u011b\n%\3%"+
		"\3%\5%\u011f\n%\3%\3%\5%\u0123\n%\3%\3%\5%\u0127\n%\5%\u0129\n%\3&\3&"+
		"\7&\u012d\n&\f&\16&\u0130\13&\3&\3&\3\'\3\'\5\'\u0136\n\'\3(\3(\3(\3("+
		"\5(\u013c\n(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\5)\u0149\n)\3*\3*\3*\3*"+
		"\3*\3*\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3"+
		"\62\3\63\3\63\3\64\3\64\3\64\7\64\u0168\n\64\f\64\16\64\u016b\13\64\3"+
		"\65\6\65\u016e\n\65\r\65\16\65\u016f\3\65\3\65\3\66\3\66\3\67\3\67\3\67"+
		"\3\67\3\67\7\67\u017b\n\67\f\67\16\67\u017e\13\67\3\67\3\67\3\67\3\67"+
		"\38\38\38\38\78\u0188\n8\f8\168\u018b\138\38\38\38\38\38\38\78\u0193\n"+
		"8\f8\168\u0196\138\38\38\58\u019a\n8\38\38\39\39\39\39\79\u01a2\n9\f9"+
		"\169\u01a5\139\39\39\79\u01a9\n9\f9\169\u01ac\139\59\u01ae\n9\39\39\3"+
		":\3:\3:\3:\3:\3:\7:\u01b8\n:\f:\16:\u01bb\13:\3:\3:\3;\6;\u01c0\n;\r;"+
		"\16;\u01c1\3;\3;\3<\3<\3<\3<\3<\3<\5<\u01cc\n<\6\u017c\u0189\u0194\u01b9"+
		"\2=\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\29\2;"+
		"\2=\2?\2A\2C\2E\2G\2I\35K\36M\2O\2Q\2S\2U\37W Y![\"]#_$a%c&e\'g(i)k\2"+
		"m*o+q,s-u.w\2\3\2\24\3\2\62;\5\2\62;CHch\3\2\629\3\2\62\63\4\2NNnn\4\2"+
		"DDdd\4\2ZZzz\3\2\63;\4\2$$^^\t\2$$^^ddhhppttvv\3\2\62\65\f\2#),-//\61"+
		"\61<<>B^^`b~~\u0080\u0080\4\2\f\f\17\17\5\2\13\f\16\17\"\"\5\2C\\aac|"+
		"\4\2\2\u0101\ud802\udc01\3\2\ud802\udc01\3\2\udc02\ue001\u01dd\2\3\3\2"+
		"\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"+
		"\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"+
		"\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"+
		"\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"+
		"\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2U\3\2\2\2\2W\3"+
		"\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2"+
		"\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2"+
		"s\3\2\2\2\2u\3\2\2\2\3y\3\2\2\2\5|\3\2\2\2\7~\3\2\2\2\t\u0080\3\2\2\2"+
		"\13\u0084\3\2\2\2\r\u008b\3\2\2\2\17\u0090\3\2\2\2\21\u0095\3\2\2\2\23"+
		"\u009d\3\2\2\2\25\u00a4\3\2\2\2\27\u00ab\3\2\2\2\31\u00ae\3\2\2\2\33\u00b2"+
		"\3\2\2\2\35\u00b6\3\2\2\2\37\u00ba\3\2\2\2!\u00bd\3\2\2\2#\u00c2\3\2\2"+
		"\2%\u00c7\3\2\2\2\'\u00cb\3\2\2\2)\u00ce\3\2\2\2+\u00d2\3\2\2\2-\u00d8"+
		"\3\2\2\2/\u00dd\3\2\2\2\61\u00e0\3\2\2\2\63\u00e3\3\2\2\2\65\u00f1\3\2"+
		"\2\2\67\u00f3\3\2\2\29\u00f5\3\2\2\2;\u00f7\3\2\2\2=\u00f9\3\2\2\2?\u00fb"+
		"\3\2\2\2A\u00fd\3\2\2\2C\u0104\3\2\2\2E\u010a\3\2\2\2G\u0111\3\2\2\2I"+
		"\u0128\3\2\2\2K\u012a\3\2\2\2M\u0135\3\2\2\2O\u013b\3\2\2\2Q\u0148\3\2"+
		"\2\2S\u014a\3\2\2\2U\u0152\3\2\2\2W\u0154\3\2\2\2Y\u0156\3\2\2\2[\u0158"+
		"\3\2\2\2]\u015a\3\2\2\2_\u015c\3\2\2\2a\u015e\3\2\2\2c\u0160\3\2\2\2e"+
		"\u0162\3\2\2\2g\u0164\3\2\2\2i\u016d\3\2\2\2k\u0173\3\2\2\2m\u0175\3\2"+
		"\2\2o\u0199\3\2\2\2q\u01ad\3\2\2\2s\u01b1\3\2\2\2u\u01bf\3\2\2\2w\u01cb"+
		"\3\2\2\2yz\7?\2\2z{\7@\2\2{\4\3\2\2\2|}\7a\2\2}\6\3\2\2\2~\177\7?\2\2"+
		"\177\b\3\2\2\2\u0080\u0081\7k\2\2\u0081\u0082\7p\2\2\u0082\u0083\7v\2"+
		"\2\u0083\n\3\2\2\2\u0084\u0085\7u\2\2\u0085\u0086\7v\2\2\u0086\u0087\7"+
		"t\2\2\u0087\u0088\7k\2\2\u0088\u0089\7p\2\2\u0089\u008a\7i\2\2\u008a\f"+
		"\3\2\2\2\u008b\u008c\7d\2\2\u008c\u008d\7q\2\2\u008d\u008e\7q\2\2\u008e"+
		"\u008f\7n\2\2\u008f\16\3\2\2\2\u0090\u0091\7v\2\2\u0091\u0092\7j\2\2\u0092"+
		"\u0093\7k\2\2\u0093\u0094\7u\2\2\u0094\20\3\2\2\2\u0095\u0096\7t\2\2\u0096"+
		"\u0097\7g\2\2\u0097\u0098\7s\2\2\u0098\u0099\7w\2\2\u0099\u009a\7k\2\2"+
		"\u009a\u009b\7t\2\2\u009b\u009c\7g\2\2\u009c\22\3\2\2\2\u009d\u009e\7"+
		"o\2\2\u009e\u009f\7q\2\2\u009f\u00a0\7f\2\2\u00a0\u00a1\7w\2\2\u00a1\u00a2"+
		"\7n\2\2\u00a2\u00a3\7g\2\2\u00a3\24\3\2\2\2\u00a4\u00a5\7r\2\2\u00a5\u00a6"+
		"\7w\2\2\u00a6\u00a7\7d\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9\7k\2\2\u00a9"+
		"\u00aa\7e\2\2\u00aa\26\3\2\2\2\u00ab\u00ac\7c\2\2\u00ac\u00ad\7u\2\2\u00ad"+
		"\30\3\2\2\2\u00ae\u00af\7n\2\2\u00af\u00b0\7c\2\2\u00b0\u00b1\7o\2\2\u00b1"+
		"\32\3\2\2\2\u00b2\u00b3\7h\2\2\u00b3\u00b4\7w\2\2\u00b4\u00b5\7p\2\2\u00b5"+
		"\34\3\2\2\2\u00b6\u00b7\7x\2\2\u00b7\u00b8\7c\2\2\u00b8\u00b9\7n\2\2\u00b9"+
		"\36\3\2\2\2\u00ba\u00bb\7k\2\2\u00bb\u00bc\7h\2\2\u00bc \3\2\2\2\u00bd"+
		"\u00be\7v\2\2\u00be\u00bf\7j\2\2\u00bf\u00c0\7g\2\2\u00c0\u00c1\7p\2\2"+
		"\u00c1\"\3\2\2\2\u00c2\u00c3\7g\2\2\u00c3\u00c4\7n\2\2\u00c4\u00c5\7u"+
		"\2\2\u00c5\u00c6\7g\2\2\u00c6$\3\2\2\2\u00c7\u00c8\7n\2\2\u00c8\u00c9"+
		"\7g\2\2\u00c9\u00ca\7v\2\2\u00ca&\3\2\2\2\u00cb\u00cc\7k\2\2\u00cc\u00cd"+
		"\7p\2\2\u00cd(\3\2\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1"+
		"\7f\2\2\u00d1*\3\2\2\2\u00d2\u00d3\7y\2\2\u00d3\u00d4\7j\2\2\u00d4\u00d5"+
		"\7g\2\2\u00d5\u00d6\7t\2\2\u00d6\u00d7\7g\2\2\u00d7,\3\2\2\2\u00d8\u00d9"+
		"\7e\2\2\u00d9\u00da\7c\2\2\u00da\u00db\7u\2\2\u00db\u00dc\7g\2\2\u00dc"+
		".\3\2\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7h\2\2\u00df\60\3\2\2\2\u00e0"+
		"\u00e1\5U+\2\u00e1\u00e2\5W,\2\u00e2\62\3\2\2\2\u00e3\u00e4\7p\2\2\u00e4"+
		"\u00e5\7w\2\2\u00e5\u00e6\7n\2\2\u00e6\u00e7\7n\2\2\u00e7\64\3\2\2\2\u00e8"+
		"\u00e9\7v\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb\7w\2\2\u00eb\u00f2\7g\2\2"+
		"\u00ec\u00ed\7h\2\2\u00ed\u00ee\7c\2\2\u00ee\u00ef\7n\2\2\u00ef\u00f0"+
		"\7u\2\2\u00f0\u00f2\7g\2\2\u00f1\u00e8\3\2\2\2\u00f1\u00ec\3\2\2\2\u00f2"+
		"\66\3\2\2\2\u00f3\u00f4\t\2\2\2\u00f48\3\2\2\2\u00f5\u00f6\t\3\2\2\u00f6"+
		":\3\2\2\2\u00f7\u00f8\t\4\2\2\u00f8<\3\2\2\2\u00f9\u00fa\t\5\2\2\u00fa"+
		">\3\2\2\2\u00fb\u00fc\t\6\2\2\u00fc@\3\2\2\2\u00fd\u00fe\7\62\2\2\u00fe"+
		"\u0100\t\7\2\2\u00ff\u0101\5=\37\2\u0100\u00ff\3\2\2\2\u0101\u0102\3\2"+
		"\2\2\u0102\u0100\3\2\2\2\u0102\u0103\3\2\2\2\u0103B\3\2\2\2\u0104\u0106"+
		"\7\62\2\2\u0105\u0107\5;\36\2\u0106\u0105\3\2\2\2\u0107\u0108\3\2\2\2"+
		"\u0108\u0106\3\2\2\2\u0108\u0109\3\2\2\2\u0109D\3\2\2\2\u010a\u010b\7"+
		"\62\2\2\u010b\u010d\t\b\2\2\u010c\u010e\59\35\2\u010d\u010c\3\2\2\2\u010e"+
		"\u010f\3\2\2\2\u010f\u010d\3\2\2\2\u010f\u0110\3\2\2\2\u0110F\3\2\2\2"+
		"\u0111\u0115\t\t\2\2\u0112\u0114\5\67\34\2\u0113\u0112\3\2\2\2\u0114\u0117"+
		"\3\2\2\2\u0115\u0113\3\2\2\2\u0115\u0116\3\2\2\2\u0116H\3\2\2\2\u0117"+
		"\u0115\3\2\2\2\u0118\u011a\5A!\2\u0119\u011b\5? \2\u011a\u0119\3\2\2\2"+
		"\u011a\u011b\3\2\2\2\u011b\u0129\3\2\2\2\u011c\u011e\5C\"\2\u011d\u011f"+
		"\5? \2\u011e\u011d\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u0129\3\2\2\2\u0120"+
		"\u0122\5C\"\2\u0121\u0123\5? \2\u0122\u0121\3\2\2\2\u0122\u0123\3\2\2"+
		"\2\u0123\u0129\3\2\2\2\u0124\u0126\5G$\2\u0125\u0127\5? \2\u0126\u0125"+
		"\3\2\2\2\u0126\u0127\3\2\2\2\u0127\u0129\3\2\2\2\u0128\u0118\3\2\2\2\u0128"+
		"\u011c\3\2\2\2\u0128\u0120\3\2\2\2\u0128\u0124\3\2\2\2\u0129J\3\2\2\2"+
		"\u012a\u012e\7$\2\2\u012b\u012d\5M\'\2\u012c\u012b\3\2\2\2\u012d\u0130"+
		"\3\2\2\2\u012e\u012c\3\2\2\2\u012e\u012f\3\2\2\2\u012f\u0131\3\2\2\2\u0130"+
		"\u012e\3\2\2\2\u0131\u0132\7$\2\2\u0132L\3\2\2\2\u0133\u0136\n\n\2\2\u0134"+
		"\u0136\5O(\2\u0135\u0133\3\2\2\2\u0135\u0134\3\2\2\2\u0136N\3\2\2\2\u0137"+
		"\u0138\7^\2\2\u0138\u013c\t\13\2\2\u0139\u013c\5Q)\2\u013a\u013c\5S*\2"+
		"\u013b\u0137\3\2\2\2\u013b\u0139\3\2\2\2\u013b\u013a\3\2\2\2\u013cP\3"+
		"\2\2\2\u013d\u013e\7^\2\2\u013e\u0149\5;\36\2\u013f\u0140\7^\2\2\u0140"+
		"\u0141\5;\36\2\u0141\u0142\5;\36\2\u0142\u0149\3\2\2\2\u0143\u0144\7^"+
		"\2\2\u0144\u0145\t\f\2\2\u0145\u0146\5;\36\2\u0146\u0147\5;\36\2\u0147"+
		"\u0149\3\2\2\2\u0148\u013d\3\2\2\2\u0148\u013f\3\2\2\2\u0148\u0143\3\2"+
		"\2\2\u0149R\3\2\2\2\u014a\u014b\7^\2\2\u014b\u014c\7w\2\2\u014c\u014d"+
		"\3\2\2\2\u014d\u014e\59\35\2\u014e\u014f\59\35\2\u014f\u0150\59\35\2\u0150"+
		"\u0151\59\35\2\u0151T\3\2\2\2\u0152\u0153\7*\2\2\u0153V\3\2\2\2\u0154"+
		"\u0155\7+\2\2\u0155X\3\2\2\2\u0156\u0157\7}\2\2\u0157Z\3\2\2\2\u0158\u0159"+
		"\7\177\2\2\u0159\\\3\2\2\2\u015a\u015b\7]\2\2\u015b^\3\2\2\2\u015c\u015d"+
		"\7_\2\2\u015d`\3\2\2\2\u015e\u015f\7=\2\2\u015fb\3\2\2\2\u0160\u0161\7"+
		".\2\2\u0161d\3\2\2\2\u0162\u0163\7\60\2\2\u0163f\3\2\2\2\u0164\u0169\5"+
		"w<\2\u0165\u0168\5w<\2\u0166\u0168\5\67\34\2\u0167\u0165\3\2\2\2\u0167"+
		"\u0166\3\2\2\2\u0168\u016b\3\2\2\2\u0169\u0167\3\2\2\2\u0169\u016a\3\2"+
		"\2\2\u016ah\3\2\2\2\u016b\u0169\3\2\2\2\u016c\u016e\5k\66\2\u016d\u016c"+
		"\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170"+
		"\u0171\3\2\2\2\u0171\u0172\6\65\2\2\u0172j\3\2\2\2\u0173\u0174\t\r\2\2"+
		"\u0174l\3\2\2\2\u0175\u0176\7\61\2\2\u0176\u0177\7,\2\2\u0177\u0178\7"+
		",\2\2\u0178\u017c\3\2\2\2\u0179\u017b\13\2\2\2\u017a\u0179\3\2\2\2\u017b"+
		"\u017e\3\2\2\2\u017c\u017d\3\2\2\2\u017c\u017a\3\2\2\2\u017d\u017f\3\2"+
		"\2\2\u017e\u017c\3\2\2\2\u017f\u0180\7,\2\2\u0180\u0181\7,\2\2\u0181\u0182"+
		"\7\61\2\2\u0182n\3\2\2\2\u0183\u0184\7\61\2\2\u0184\u0185\7,\2\2\u0185"+
		"\u0189\3\2\2\2\u0186\u0188\13\2\2\2\u0187\u0186\3\2\2\2\u0188\u018b\3"+
		"\2\2\2\u0189\u018a\3\2\2\2\u0189\u0187\3\2\2\2\u018a\u018c\3\2\2\2\u018b"+
		"\u0189\3\2\2\2\u018c\u018d\7,\2\2\u018d\u019a\7\61\2\2\u018e\u018f\7*"+
		"\2\2\u018f\u0190\7,\2\2\u0190\u0194\3\2\2\2\u0191\u0193\13\2\2\2\u0192"+
		"\u0191\3\2\2\2\u0193\u0196\3\2\2\2\u0194\u0195\3\2\2\2\u0194\u0192\3\2"+
		"\2\2\u0195\u0197\3\2\2\2\u0196\u0194\3\2\2\2\u0197\u0198\7,\2\2\u0198"+
		"\u019a\7+\2\2\u0199\u0183\3\2\2\2\u0199\u018e\3\2\2\2\u019a\u019b\3\2"+
		"\2\2\u019b\u019c\b8\2\2\u019cp\3\2\2\2\u019d\u019e\7\61\2\2\u019e\u019f"+
		"\7\61\2\2\u019f\u01a3\3\2\2\2\u01a0\u01a2\n\16\2\2\u01a1\u01a0\3\2\2\2"+
		"\u01a2\u01a5\3\2\2\2\u01a3\u01a1\3\2\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01ae"+
		"\3\2\2\2\u01a5\u01a3\3\2\2\2\u01a6\u01aa\7%\2\2\u01a7\u01a9\n\16\2\2\u01a8"+
		"\u01a7\3\2\2\2\u01a9\u01ac\3\2\2\2\u01aa\u01a8\3\2\2\2\u01aa\u01ab\3\2"+
		"\2\2\u01ab\u01ae\3\2\2\2\u01ac\u01aa\3\2\2\2\u01ad\u019d\3\2\2\2\u01ad"+
		"\u01a6\3\2\2\2\u01ae\u01af\3\2\2\2\u01af\u01b0\b9\2\2\u01b0r\3\2\2\2\u01b1"+
		"\u01b2\7\61\2\2\u01b2\u01b3\7\61\2\2\u01b3\u01b4\7\61\2\2\u01b4\u01b5"+
		"\7\61\2\2\u01b5\u01b9\3\2\2\2\u01b6\u01b8\13\2\2\2\u01b7\u01b6\3\2\2\2"+
		"\u01b8\u01bb\3\2\2\2\u01b9\u01ba\3\2\2\2\u01b9\u01b7\3\2\2\2\u01ba\u01bc"+
		"\3\2\2\2\u01bb\u01b9\3\2\2\2\u01bc\u01bd\b:\2\2\u01bdt\3\2\2\2\u01be\u01c0"+
		"\t\17\2\2\u01bf\u01be\3\2\2\2\u01c0\u01c1\3\2\2\2\u01c1\u01bf\3\2\2\2"+
		"\u01c1\u01c2\3\2\2\2\u01c2\u01c3\3\2\2\2\u01c3\u01c4\b;\2\2\u01c4v\3\2"+
		"\2\2\u01c5\u01cc\t\20\2\2\u01c6\u01c7\n\21\2\2\u01c7\u01cc\6<\3\2\u01c8"+
		"\u01c9\t\22\2\2\u01c9\u01ca\t\23\2\2\u01ca\u01cc\6<\4\2\u01cb\u01c5\3"+
		"\2\2\2\u01cb\u01c6\3\2\2\2\u01cb\u01c8\3\2\2\2\u01ccx\3\2\2\2\36\2\u00f1"+
		"\u0102\u0108\u010f\u0115\u011a\u011e\u0122\u0126\u0128\u012e\u0135\u013b"+
		"\u0148\u0167\u0169\u016f\u017c\u0189\u0194\u0199\u01a3\u01aa\u01ad\u01b9"+
		"\u01c1\u01cb\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}